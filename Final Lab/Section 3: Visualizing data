1.
# Import matplotlib
import matplotlib.pyplot as plt

# Create scatter plot
plt.scatter(unemployment_rate,low_wage_jobs)

# Label x axis
plt.xlabel("Unemployment rate")

# Label y axis
plt.ylabel("Low pay jobs")

# Display the graph 
plt.show()

2.
# Plot the red and triangle shaped scatter plot  
plt.scatter(unemployment_rate,low_wage_jobs,color='r',marker='^')

# Display the visualization
plt.show()

3.
# Plot a histogram of sharewomen
plt.hist(sharewomen)

# Show the plot
plt.show()

4.
# Import matplotlib and pandas
import matplotlib.pyplot as plt
import pandas as pd

# Create scatter plot
dept_stats.plot(kind='scatter', x='unemployment_rate', y='low_wage_jobs')
plt.show()

# Import matplotlib and pandas
import matplotlib.pyplot as plt
import pandas as pd

# Create histogram
recent_grads.sharewomen.plot(kind='hist')
plt.show()

5.
# DataFrame of non-college job sums
df = recent_grads.groupby(['major_category']).non_college_jobs.sum()

# Plot bar chart
df.plot(kind="bar")

# Show graph
plt.show()

6.
# DataFrame of college and non-college job sums
df1 =  recent_grads.groupby(['major_category'])['college_jobs','non_college_jobs'].sum()

# Plot bar chart
df1.plot(kind="bar")

# Show graph
plt.show()

7.
# Print the size of the DataFrame
print(recent_grads.size)

# Drop all rows with a missing value
recent_grads.dropna(axis=0,inplace=True)

# Print the size of the DataFrame
print(recent_grads.size)

8.
# Convert to numeric and divide by 1000
recent_grads['median'] = pd.to_numeric(recent_grads['median'])/1000
recent_grads['p25th'] = pd.to_numeric(recent_grads['p25th'])/1000
recent_grads['p75th'] = pd.to_numeric(recent_grads['p75th'])/1000

# Select averages by major category
columns = ['median', 'p25th', 'p75th']
sal_quantiles = recent_grads.groupby(['major_category'])[columns].mean()

9.
# Plot the data
sal_quantiles.plot()

# Set xticks
plt.xticks(
    np.arange(len(sal_quantiles.index)),
    sal_quantiles.index, 
    rotation='vertical')

# Show the plot
plt.show()

# Plot with subplots
sal_quantiles.plot(subplots=True)
plt.show()
